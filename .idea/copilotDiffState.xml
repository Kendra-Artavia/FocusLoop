<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/focusloop/activities/PomodoroActivity.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/focusloop/activities/PomodoroActivity.kt" />
              <option name="originalContent" value="package com.example.focusloop.activities&#10;&#10;import android.os.Bundle&#10;import android.widget.*&#10;import android.media.MediaPlayer&#10;import androidx.appcompat.app.AppCompatActivity&#10;import com.example.focusloop.R&#10;import android.os.CountDownTimer&#10;class PomodoroActivity : AppCompatActivity() {&#10;&#10;    private lateinit var mediaPlayer: MediaPlayer&#10;    private var timerRunning = false&#10;    private var workMinutes = 25&#10;    private var breakMinutes = 5&#10;    private var countDownTimer: CountDownTimer? = null&#10;    private var timeLeftInMillis: Long = 0L&#10;    private var isPaused = false&#10;    private var pauseTimeLeft: Long = 0L&#10;&#10;    // NUEVO: Guardar el tipo de música seleccionada&#10;    private var selectedMusicType: String = &quot;Ambient&quot;&#10;&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        setContentView(R.layout.activity_pomodoro)&#10;&#10;        // --- MUSIC BUTTONS ---&#10;        val musicAmbientButton = findViewById&lt;Button&gt;(R.id.musicAmbientButton)&#10;        val musicRelaxingButton = findViewById&lt;Button&gt;(R.id.musicRelaxingButton)&#10;        val musicRainButton = findViewById&lt;Button&gt;(R.id.musicRainButton)&#10;&#10;        // Inicializa el estado visual de los botones de música&#10;        highlightSelectedMusicButton(musicAmbientButton, musicRelaxingButton, musicRainButton)&#10;&#10;        musicAmbientButton.setOnClickListener {&#10;            if (selectedMusicType != &quot;Ambient&quot;) {&#10;                selectedMusicType = &quot;Ambient&quot;&#10;                playMusic(selectedMusicType)&#10;                highlightSelectedMusicButton(musicAmbientButton, musicRelaxingButton, musicRainButton)&#10;            }&#10;        }&#10;        musicRelaxingButton.setOnClickListener {&#10;            if (selectedMusicType != &quot;Relaxing&quot;) {&#10;                selectedMusicType = &quot;Relaxing&quot;&#10;                playMusic(selectedMusicType)&#10;                highlightSelectedMusicButton(musicRelaxingButton, musicAmbientButton, musicRainButton)&#10;            }&#10;        }&#10;        musicRainButton.setOnClickListener {&#10;            if (selectedMusicType != &quot;Rain&quot;) {&#10;                selectedMusicType = &quot;Rain&quot;&#10;                playMusic(selectedMusicType)&#10;                highlightSelectedMusicButton(musicRainButton, musicAmbientButton, musicRelaxingButton)&#10;            }&#10;        }&#10;&#10;        // Botón para iniciar la sesión Pomodoro&#10;        val startButton = findViewById&lt;Button&gt;(R.id.startButton)&#10;        val stopButton = findViewById&lt;Button&gt;(R.id.stopButton)&#10;&#10;        startButton.setOnClickListener {&#10;            if (!timerRunning) {&#10;                // Siempre usa el valor actual de workMinutes antes de iniciar&#10;                timeLeftInMillis = workMinutes * 60 * 1000L&#10;                startPomodoroSession()&#10;                timerRunning = true&#10;                isPaused = false&#10;            }&#10;        }&#10;&#10;        stopButton.setOnClickListener {&#10;            if (timerRunning || isPaused) {&#10;                stopPomodoroSession()&#10;                timerRunning = false&#10;                isPaused = false&#10;            }&#10;        }&#10;&#10;        // Botón de volver&#10;        val backButton = findViewById&lt;ImageButton&gt;(R.id.backButton)&#10;        backButton.setOnClickListener {&#10;            finish()&#10;        }&#10;&#10;        // Referencias a los botones de sesión&#10;        val baseButton = findViewById&lt;Button&gt;(R.id.baseButton)&#10;        val easyButton = findViewById&lt;Button&gt;(R.id.easyButton)&#10;        val customButton = findViewById&lt;Button&gt;(R.id.customButton)&#10;&#10;        // Configuración de botones de sesión&#10;        baseButton.setOnClickListener {&#10;            stopIfRunningAndReset()&#10;            workMinutes = 25&#10;            breakMinutes = 5&#10;            updateTimer()&#10;            highlightSelectedSessionButton(baseButton, easyButton, customButton)&#10;            Toast.makeText(this, &quot;Base mode selected&quot;, Toast.LENGTH_SHORT).show()&#10;        }&#10;&#10;        easyButton.setOnClickListener {&#10;            stopIfRunningAndReset()&#10;            workMinutes = 10&#10;            breakMinutes = 5&#10;            updateTimer()&#10;            highlightSelectedSessionButton(easyButton, baseButton, customButton)&#10;            Toast.makeText(this, &quot;Easy mode selected&quot;, Toast.LENGTH_SHORT).show()&#10;        }&#10;&#10;        customButton.setOnClickListener {&#10;            stopIfRunningAndReset()&#10;            showCustomTimeDialog {&#10;                highlightSelectedSessionButton(customButton, baseButton, easyButton)&#10;                Toast.makeText(this, &quot;Custom mode selected&quot;, Toast.LENGTH_SHORT).show()&#10;            }&#10;        }&#10;&#10;        // Inicializa el temporizador con el valor por defecto y resalta el botón base&#10;        updateTimer()&#10;        highlightSelectedSessionButton(baseButton, easyButton, customButton)&#10;    }&#10;&#10;    // NUEVO: Función para resaltar el botón de sesión seleccionado&#10;    private fun highlightSelectedSessionButton(selected: Button, other1: Button, other2: Button) {&#10;        selected.setBackgroundResource(R.drawable.rounded_button_pink)&#10;        other1.setBackgroundResource(R.drawable.rounded_button_blue)&#10;        other2.setBackgroundResource(R.drawable.rounded_button_blue)&#10;    }&#10;&#10;    // Añade esta función para resaltar el botón de música seleccionado&#10;    private fun highlightSelectedMusicButton(selected: Button, other1: Button, other2: Button) {&#10;        selected.setBackgroundResource(R.drawable.rounded_button_pink)&#10;        other1.setBackgroundResource(R.drawable.rounded_button_blue)&#10;        other2.setBackgroundResource(R.drawable.rounded_button_blue)&#10;    }&#10;&#10;    private fun updateTimer() {&#10;        val pomodoroTime = findViewById&lt;TextView&gt;(R.id.pomodoroTime)&#10;        pomodoroTime.text = String.format(&quot;%02d:00&quot;, workMinutes)&#10;        timeLeftInMillis = workMinutes * 60 * 1000L&#10;    }&#10;&#10;    private fun startPomodoroSession() {&#10;        playMusic(selectedMusicType)&#10;        // Usa el valor actual de timeLeftInMillis&#10;        countDownTimer = object : CountDownTimer(timeLeftInMillis, 1000) {&#10;            override fun onTick(millisUntilFinished: Long) {&#10;                timeLeftInMillis = millisUntilFinished&#10;                val minutes = (millisUntilFinished / 1000) / 60&#10;                val seconds = (millisUntilFinished / 1000) % 60&#10;                val pomodoroTime = findViewById&lt;TextView&gt;(R.id.pomodoroTime)&#10;                pomodoroTime.text = String.format(&quot;%02d:%02d&quot;, minutes, seconds)&#10;            }&#10;            override fun onFinish() {&#10;                timerRunning = false&#10;                isPaused = false&#10;                pauseTimeLeft = 0L&#10;                val pomodoroTime = findViewById&lt;TextView&gt;(R.id.pomodoroTime)&#10;                pomodoroTime.text = &quot;00:00&quot;&#10;                if (::mediaPlayer.isInitialized) mediaPlayer.stop()&#10;            }&#10;        }.start()&#10;        timerRunning = true&#10;        isPaused = false&#10;    }&#10;&#10;    private fun stopPomodoroSession() {&#10;        countDownTimer?.cancel()&#10;        if (::mediaPlayer.isInitialized) mediaPlayer.stop()&#10;        // No reset, just stop&#10;        pauseTimeLeft = timeLeftInMillis&#10;        isPaused = false&#10;        timerRunning = false&#10;    }&#10;&#10;    private fun playMusic(musicType: String) {&#10;        if (::mediaPlayer.isInitialized) {&#10;            mediaPlayer.stop()&#10;            mediaPlayer.release()&#10;        }&#10;        when (musicType) {&#10;            &quot;Ambient&quot; -&gt; mediaPlayer = MediaPlayer.create(this, R.raw.ambient_music)&#10;            &quot;Relaxing&quot; -&gt; mediaPlayer = MediaPlayer.create(this, R.raw.relaxing_music)&#10;            &quot;Rain&quot; -&gt; mediaPlayer = MediaPlayer.create(this, R.raw.rain_sounds)&#10;        }&#10;        // Set volume to system default (no custom SeekBar)&#10;        mediaPlayer.isLooping = true&#10;        mediaPlayer.start()&#10;    }&#10;&#10;    private fun stopIfRunningAndReset() {&#10;        if (timerRunning || isPaused) {&#10;            stopPomodoroSession()&#10;        }&#10;        // Reinicia el tiempo restante para reflejar el nuevo valor seleccionado&#10;        timeLeftInMillis = workMinutes * 60 * 1000L&#10;    }&#10;&#10;    // Modifica showCustomTimeDialog para aceptar un callback opcional&#10;    private fun showCustomTimeDialog(onSelected: (() -&gt; Unit)? = null) {&#10;        val input = EditText(this)&#10;        input.hint = &quot;Enter minutes&quot;&#10;        androidx.appcompat.app.AlertDialog.Builder(this)&#10;            .setTitle(&quot;Set Custom Time&quot;)&#10;            .setView(input)&#10;            .setPositiveButton(&quot;Set&quot;) { d, _ -&gt;&#10;                val time = input.text.toString().toIntOrNull() ?: 25&#10;                workMinutes = time&#10;                breakMinutes = 5&#10;                updateTimer()&#10;                timeLeftInMillis = workMinutes * 60 * 1000L&#10;                d.dismiss()&#10;                onSelected?.invoke()&#10;            }&#10;            .setNegativeButton(&quot;Cancel&quot;) { d, _ -&gt; d.dismiss() }&#10;            .show()&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.example.focusloop.activities&#10;&#10;import android.os.Bundle&#10;import android.widget.*&#10;import android.media.MediaPlayer&#10;import androidx.appcompat.app.AppCompatActivity&#10;import com.example.focusloop.R&#10;import android.os.CountDownTimer&#10;class PomodoroActivity : AppCompatActivity() {&#10;&#10;    private lateinit var mediaPlayer: MediaPlayer&#10;    private var timerRunning = false&#10;    private var workMinutes = 25&#10;    private var breakMinutes = 5&#10;    private var countDownTimer: CountDownTimer? = null&#10;    private var timeLeftInMillis: Long = 0L&#10;    private var isPaused = false&#10;    private var pauseTimeLeft: Long = 0L&#10;&#10;    // NUEVO: Guardar el tipo de música seleccionada&#10;    private var selectedMusicType: String = &quot;Ambient&quot;&#10;&#10;    override fun onCreate(savedInstanceState: Bundle?) {&#10;        super.onCreate(savedInstanceState)&#10;        setContentView(R.layout.activity_pomodoro)&#10;&#10;        // --- MUSIC BUTTONS ---&#10;        val musicAmbientButton = findViewById&lt;Button&gt;(R.id.musicAmbientButton)&#10;        val musicRelaxingButton = findViewById&lt;Button&gt;(R.id.musicRelaxingButton)&#10;        val musicRainButton = findViewById&lt;Button&gt;(R.id.musicRainButton)&#10;&#10;        // Inicializa el estado visual de los botones de música&#10;        highlightSelectedMusicButton(musicAmbientButton, musicRelaxingButton, musicRainButton)&#10;&#10;        musicAmbientButton.setOnClickListener {&#10;            if (selectedMusicType != &quot;Ambient&quot;) {&#10;                selectedMusicType = &quot;Ambient&quot;&#10;                playMusic(selectedMusicType)&#10;                highlightSelectedMusicButton(musicAmbientButton, musicRelaxingButton, musicRainButton)&#10;            }&#10;        }&#10;        musicRelaxingButton.setOnClickListener {&#10;            if (selectedMusicType != &quot;Relaxing&quot;) {&#10;                selectedMusicType = &quot;Relaxing&quot;&#10;                playMusic(selectedMusicType)&#10;                highlightSelectedMusicButton(musicRelaxingButton, musicAmbientButton, musicRainButton)&#10;            }&#10;        }&#10;        musicRainButton.setOnClickListener {&#10;            if (selectedMusicType != &quot;Rain&quot;) {&#10;                selectedMusicType = &quot;Rain&quot;&#10;                playMusic(selectedMusicType)&#10;                highlightSelectedMusicButton(musicRainButton, musicAmbientButton, musicRelaxingButton)&#10;            }&#10;        }&#10;&#10;        // Botón para iniciar la sesión Pomodoro&#10;        val startButton = findViewById&lt;Button&gt;(R.id.startButton)&#10;        val stopButton = findViewById&lt;Button&gt;(R.id.stopButton)&#10;&#10;        startButton.setOnClickListener {&#10;            if (!timerRunning) {&#10;                // Siempre usa el valor actual de workMinutes antes de iniciar&#10;                timeLeftInMillis = workMinutes * 60 * 1000L&#10;                startPomodoroSession()&#10;                timerRunning = true&#10;                isPaused = false&#10;            }&#10;        }&#10;&#10;        stopButton.setOnClickListener {&#10;            if (timerRunning || isPaused) {&#10;                stopPomodoroSession()&#10;                timerRunning = false&#10;                isPaused = false&#10;            }&#10;        }&#10;&#10;        // Botón de volver&#10;        val backButton = findViewById&lt;ImageButton&gt;(R.id.backButton)&#10;        backButton.setOnClickListener {&#10;            finish()&#10;        }&#10;&#10;        // Referencias a los botones de sesión&#10;        val baseButton = findViewById&lt;Button&gt;(R.id.baseButton)&#10;        val easyButton = findViewById&lt;Button&gt;(R.id.easyButton)&#10;        val customButton = findViewById&lt;Button&gt;(R.id.customButton)&#10;&#10;        // Configuración de botones de sesión&#10;        baseButton.setOnClickListener {&#10;            stopIfRunningAndReset()&#10;            workMinutes = 25&#10;            breakMinutes = 5&#10;            updateTimer()&#10;            highlightSelectedSessionButton(baseButton, easyButton, customButton)&#10;            Toast.makeText(this, &quot;Base mode selected&quot;, Toast.LENGTH_SHORT).show()&#10;        }&#10;&#10;        easyButton.setOnClickListener {&#10;            stopIfRunningAndReset()&#10;            workMinutes = 10&#10;            breakMinutes = 5&#10;            updateTimer()&#10;            highlightSelectedSessionButton(easyButton, baseButton, customButton)&#10;            Toast.makeText(this, &quot;Easy mode selected&quot;, Toast.LENGTH_SHORT).show()&#10;        }&#10;&#10;        customButton.setOnClickListener {&#10;            stopIfRunningAndReset()&#10;            showCustomTimeDialog {&#10;                highlightSelectedSessionButton(customButton, baseButton, easyButton)&#10;                Toast.makeText(this, &quot;Custom mode selected&quot;, Toast.LENGTH_SHORT).show()&#10;            }&#10;        }&#10;&#10;        // Inicializa el temporizador con el valor por defecto y resalta el botón base&#10;        updateTimer()&#10;        highlightSelectedSessionButton(baseButton, easyButton, customButton)&#10;    }&#10;&#10;    // NUEVO: Función para resaltar el botón de sesión seleccionado&#10;    private fun highlightSelectedSessionButton(selected: Button, other1: Button, other2: Button) {&#10;        selected.setBackgroundResource(R.drawable.rounded_button_pink)&#10;        other1.setBackgroundResource(R.drawable.rounded_button_blue)&#10;        other2.setBackgroundResource(R.drawable.rounded_button_blue)&#10;    }&#10;&#10;    // Añade esta función para resaltar el botón de música seleccionado&#10;    private fun highlightSelectedMusicButton(selected: Button, other1: Button, other2: Button) {&#10;        selected.setBackgroundResource(R.drawable.rounded_button_pink)&#10;        other1.setBackgroundResource(R.drawable.rounded_button_blue)&#10;        other2.setBackgroundResource(R.drawable.rounded_button_blue)&#10;    }&#10;&#10;    private fun updateTimer() {&#10;        val pomodoroTime = findViewById&lt;TextView&gt;(R.id.pomodoroTime)&#10;        pomodoroTime.text = String.format(&quot;%02d:00&quot;, workMinutes)&#10;        timeLeftInMillis = workMinutes * 60 * 1000L&#10;    }&#10;&#10;    private fun startPomodoroSession() {&#10;        playMusic(selectedMusicType)&#10;        // Usa el valor actual de timeLeftInMillis&#10;        countDownTimer = object : CountDownTimer(timeLeftInMillis, 1000) {&#10;            override fun onTick(millisUntilFinished: Long) {&#10;                timeLeftInMillis = millisUntilFinished&#10;                val minutes = (millisUntilFinished / 1000) / 60&#10;                val seconds = (millisUntilFinished / 1000) % 60&#10;                val pomodoroTime = findViewById&lt;TextView&gt;(R.id.pomodoroTime)&#10;                pomodoroTime.text = String.format(&quot;%02d:%02d&quot;, minutes, seconds)&#10;            }&#10;            override fun onFinish() {&#10;                timerRunning = false&#10;                isPaused = false&#10;                pauseTimeLeft = 0L&#10;                val pomodoroTime = findViewById&lt;TextView&gt;(R.id.pomodoroTime)&#10;                pomodoroTime.text = &quot;00:00&quot;&#10;                if (::mediaPlayer.isInitialized) mediaPlayer.stop()&#10;            }&#10;        }.start()&#10;        timerRunning = true&#10;        isPaused = false&#10;    }&#10;&#10;    private fun stopPomodoroSession() {&#10;        countDownTimer?.cancel()&#10;        if (::mediaPlayer.isInitialized) mediaPlayer.stop()&#10;        // No reset, just stop&#10;        pauseTimeLeft = timeLeftInMillis&#10;        isPaused = false&#10;        timerRunning = false&#10;    }&#10;&#10;    private fun playMusic(musicType: String) {&#10;        if (::mediaPlayer.isInitialized) {&#10;            mediaPlayer.stop()&#10;            mediaPlayer.release()&#10;        }&#10;        when (musicType) {&#10;            &quot;Ambient&quot; -&gt; mediaPlayer = MediaPlayer.create(this, R.raw.ambient_music)&#10;            &quot;Relaxing&quot; -&gt; mediaPlayer = MediaPlayer.create(this, R.raw.relaxing_music)&#10;            &quot;Rain&quot; -&gt; mediaPlayer = MediaPlayer.create(this, R.raw.rain_sounds)&#10;        }&#10;        // Set volume to system default (no custom SeekBar)&#10;        mediaPlayer.isLooping = true&#10;        mediaPlayer.start()&#10;    }&#10;&#10;    private fun stopIfRunningAndReset() {&#10;        if (timerRunning || isPaused) {&#10;            stopPomodoroSession()&#10;        }&#10;        // Reinicia el tiempo restante para reflejar el nuevo valor seleccionado&#10;        timeLeftInMillis = workMinutes * 60 * 1000L&#10;    }&#10;&#10;    // Modifica showCustomTimeDialog para aceptar un callback opcional&#10;    private fun showCustomTimeDialog(onSelected: (() -&gt; Unit)? = null) {&#10;        val input = EditText(this)&#10;        input.hint = &quot;Enter minutes&quot;&#10;        androidx.appcompat.app.AlertDialog.Builder(this)&#10;            .setTitle(&quot;Set Custom Time&quot;)&#10;            .setView(input)&#10;            .setPositiveButton(&quot;Set&quot;) { d, _ -&gt;&#10;                val time = input.text.toString().toIntOrNull() ?: 25&#10;                workMinutes = time&#10;                breakMinutes = 5&#10;                updateTimer()&#10;                timeLeftInMillis = workMinutes * 60 * 1000L&#10;                d.dismiss()&#10;                onSelected?.invoke()&#10;            }&#10;            .setNegativeButton(&quot;Cancel&quot;) { d, _ -&gt; d.dismiss() }&#10;            .show()&#10;    }&#10;&#10;    override fun onPause() {&#10;        super.onPause()&#10;        // Detener la música si la actividad deja de estar en primer plano&#10;        if (::mediaPlayer.isInitialized &amp;&amp; mediaPlayer.isPlaying) {&#10;            mediaPlayer.stop()&#10;        }&#10;    }&#10;&#10;    override fun onDestroy() {&#10;        super.onDestroy()&#10;        // Liberar recursos del MediaPlayer al destruir la actividad&#10;        if (::mediaPlayer.isInitialized) {&#10;            mediaPlayer.release()&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_pomodoro.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_pomodoro.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:background=&quot;@color/white&quot;&#10;    android:padding=&quot;16dp&quot;&gt;&#10;&#10;    &lt;!-- Header con botón de regreso y volumen --&gt;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:gravity=&quot;center_vertical&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&gt;&#10;&#10;        &lt;!-- Botón de regreso --&gt;&#10;        &lt;ImageButton&#10;            android:id=&quot;@+id/backButton&quot;&#10;            android:layout_width=&quot;70dp&quot;&#10;            android:layout_height=&quot;70dp&quot;&#10;            android:contentDescription=&quot;@string/back_button&quot;&#10;            android:src=&quot;@drawable/icon_4&quot;&#10;            android:layout_marginEnd=&quot;16dp&quot;&#10;            android:background=&quot;@android:color/transparent&quot;&#10;            android:scaleType=&quot;centerInside&quot; /&gt;&#10;&#10;        &lt;!-- Título de la pantalla --&gt;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/pomodoroTitle&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:text=&quot;@string/pomodoro_title&quot;&#10;            android:textSize=&quot;20sp&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:textColor=&quot;#333333&quot;&#10;            android:gravity=&quot;center&quot; /&gt;&#10;&#10;        &lt;!-- Botón de volumen --&gt;&#10;        &lt;ImageButton&#10;            android:id=&quot;@+id/volumeButton&quot;&#10;            android:layout_width=&quot;70dp&quot;&#10;            android:layout_height=&quot;70dp&quot;&#10;            android:contentDescription=&quot;@string/music_select_title&quot;&#10;            android:src=&quot;@drawable/icon_5&quot;&#10;            android:background=&quot;@android:color/transparent&quot;&#10;            android:scaleType=&quot;centerInside&quot; /&gt;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;!-- Selección de tipo de sesión --&gt;&#10;    &lt;LinearLayout&#10;        android:id=&quot;@+id/sessionButtonsLayout&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:gravity=&quot;center&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&gt;&#10;&#10;        &lt;!-- Botón Base --&gt;&#10;        &lt;Button&#10;            android:id=&quot;@+id/baseButton&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:layout_marginEnd=&quot;8dp&quot;&#10;            android:background=&quot;@drawable/rounded_button_blue&quot;&#10;            android:text=&quot;@string/base_button&quot;&#10;            android:textColor=&quot;#FFFFFF&quot;&#10;            android:textSize=&quot;14sp&quot;&#10;            android:gravity=&quot;center&quot;&#10;            android:paddingTop=&quot;16dp&quot;&#10;            android:paddingBottom=&quot;16dp&quot; /&gt;&#10;&#10;        &lt;!-- Botón Fácil --&gt;&#10;        &lt;Button&#10;            android:id=&quot;@+id/easyButton&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:layout_marginEnd=&quot;8dp&quot;&#10;            android:background=&quot;@drawable/rounded_button_blue&quot;&#10;            android:text=&quot;@string/easy_button&quot;&#10;            android:textColor=&quot;#FFFFFF&quot;&#10;            android:textSize=&quot;14sp&quot;&#10;            android:gravity=&quot;center&quot;&#10;            android:paddingTop=&quot;16dp&quot;&#10;            android:paddingBottom=&quot;16dp&quot; /&gt;&#10;&#10;        &lt;!-- Botón Personalizado --&gt;&#10;        &lt;Button&#10;            android:id=&quot;@+id/customButton&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:background=&quot;@drawable/rounded_button_blue&quot;&#10;            android:text=&quot;@string/custom_button&quot;&#10;            android:textColor=&quot;#FFFFFF&quot;&#10;            android:textSize=&quot;14sp&quot;&#10;            android:gravity=&quot;center&quot;&#10;            android:paddingTop=&quot;16dp&quot;&#10;            android:paddingBottom=&quot;16dp&quot; /&gt;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;!-- Temporizador --&gt;&#10;    &lt;LinearLayout&#10;        android:id=&quot;@+id/timerLayout&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:gravity=&quot;center&quot;&#10;        android:padding=&quot;24dp&quot;&gt;&#10;&#10;        &lt;!-- Estado de la sesión --&gt;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/sessionStatus&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;@string/session_status&quot;&#10;            android:paddingStart=&quot;8dp&quot;&#10;            android:paddingEnd=&quot;8dp&quot;&#10;            android:paddingTop=&quot;4dp&quot;&#10;            android:paddingBottom=&quot;4dp&quot;&#10;            android:textColor=&quot;#FFFFFF&quot;&#10;            android:textSize=&quot;14sp&quot;&#10;            android:layout_marginBottom=&quot;24dp&quot; /&gt;&#10;&#10;        &lt;!-- Temporizador --&gt;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/pomodoroTime&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;25:00&quot;&#10;            android:textSize=&quot;72sp&quot;&#10;            android:textColor=&quot;#333333&quot;&#10;            android:layout_marginBottom=&quot;24dp&quot; /&gt;&#10;&#10;        &lt;!-- Controles del temporizador --&gt;&#10;        &lt;LinearLayout&#10;            android:id=&quot;@+id/timerControlsLayout&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:gravity=&quot;center&quot;&gt;&#10;&#10;            &lt;!-- Botón Iniciar --&gt;&#10;            &lt;Button&#10;                android:id=&quot;@+id/startButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:background=&quot;@drawable/rounded_button_pink&quot;&#10;                android:text=&quot;@string/start_button&quot;&#10;                android:textColor=&quot;#FFFFFF&quot;&#10;                android:paddingStart=&quot;24dp&quot;&#10;                android:paddingEnd=&quot;24dp&quot;&#10;                android:paddingTop=&quot;12dp&quot;&#10;                android:paddingBottom=&quot;12dp&quot;&#10;                android:drawablePadding=&quot;8dp&quot;&#10;                android:gravity=&quot;center&quot;&#10;                android:minWidth=&quot;120dp&quot; /&gt;&#10;            &#10;            &lt;!-- Botón Detener --&gt;&#10;            &lt;Button&#10;                android:id=&quot;@+id/stopButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginStart=&quot;16dp&quot;&#10;                android:text=&quot;@string/stop_button&quot;&#10;                android:textColor=&quot;#666666&quot;&#10;                android:background=&quot;@drawable/rounded_button_blue&quot;&#10;                android:paddingStart=&quot;24dp&quot;&#10;                android:paddingEnd=&quot;24dp&quot;&#10;                android:paddingTop=&quot;12dp&quot;&#10;                android:paddingBottom=&quot;12dp&quot;&#10;                android:drawablePadding=&quot;8dp&quot;&#10;                android:gravity=&quot;center&quot;&#10;                android:minWidth=&quot;120dp&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- NUEVO: Botones para seleccionar música debajo del temporizador --&gt;&#10;        &lt;LinearLayout&#10;            android:id=&quot;@+id/musicButtonsLayout&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:gravity=&quot;center&quot;&#10;            android:layout_marginTop=&quot;24dp&quot;&gt;&#10;&#10;            &lt;Button&#10;                android:id=&quot;@+id/musicAmbientButton&quot;&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:text=&quot;Ambient&quot;&#10;                android:background=&quot;@drawable/rounded_button_blue&quot;&#10;                android:textColor=&quot;#FFFFFF&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot;/&gt;&#10;&#10;            &lt;Button&#10;                android:id=&quot;@+id/musicRelaxingButton&quot;&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:text=&quot;Relaxing&quot;&#10;                android:background=&quot;@drawable/rounded_button_blue&quot;&#10;                android:textColor=&quot;#FFFFFF&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot;/&gt;&#10;&#10;            &lt;Button&#10;                android:id=&quot;@+id/musicRainButton&quot;&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:text=&quot;Rain&quot;&#10;                android:background=&quot;@drawable/rounded_button_blue&quot;&#10;                android:textColor=&quot;#FFFFFF&quot;/&gt;&#10;        &lt;/LinearLayout&gt;&#10;    &lt;/LinearLayout&gt;&#10;&lt;/LinearLayout&gt;&#10;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:background=&quot;@color/white&quot;&#10;    android:padding=&quot;16dp&quot;&gt;&#10;&#10;    &lt;!-- Header con botón de regreso y volumen --&gt;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:gravity=&quot;center_vertical&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&gt;&#10;&#10;        &lt;!-- Botón de regreso --&gt;&#10;        &lt;ImageButton&#10;            android:id=&quot;@+id/backButton&quot;&#10;            android:layout_width=&quot;70dp&quot;&#10;            android:layout_height=&quot;70dp&quot;&#10;            android:contentDescription=&quot;@string/back_button&quot;&#10;            android:src=&quot;@drawable/icon_4&quot;&#10;            android:layout_marginEnd=&quot;16dp&quot;&#10;            android:background=&quot;@android:color/transparent&quot;&#10;            android:scaleType=&quot;centerInside&quot; /&gt;&#10;&#10;        &lt;!-- Título de la pantalla --&gt;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/pomodoroTitle&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:text=&quot;@string/pomodoro_title&quot;&#10;            android:textSize=&quot;20sp&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:textColor=&quot;#333333&quot;&#10;            android:gravity=&quot;center&quot; /&gt;&#10;&#10;        &lt;!-- Botón de volumen --&gt;&#10;        &lt;ImageButton&#10;            android:id=&quot;@+id/volumeButton&quot;&#10;            android:layout_width=&quot;70dp&quot;&#10;            android:layout_height=&quot;70dp&quot;&#10;            android:contentDescription=&quot;@string/music_select_title&quot;&#10;            android:src=&quot;@drawable/icon_5&quot;&#10;            android:background=&quot;@android:color/transparent&quot;&#10;            android:scaleType=&quot;centerInside&quot; /&gt;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;!-- Selección de tipo de sesión --&gt;&#10;    &lt;LinearLayout&#10;        android:id=&quot;@+id/sessionButtonsLayout&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:gravity=&quot;center&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&gt;&#10;&#10;        &lt;!-- Botón Base --&gt;&#10;        &lt;Button&#10;            android:id=&quot;@+id/baseButton&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:layout_marginEnd=&quot;8dp&quot;&#10;            android:background=&quot;@drawable/rounded_button_blue&quot;&#10;            android:text=&quot;@string/base_button&quot;&#10;            android:textColor=&quot;#FFFFFF&quot;&#10;            android:textSize=&quot;14sp&quot;&#10;            android:gravity=&quot;center&quot;&#10;            android:paddingTop=&quot;16dp&quot;&#10;            android:paddingBottom=&quot;16dp&quot; /&gt;&#10;&#10;        &lt;!-- Botón Fácil --&gt;&#10;        &lt;Button&#10;            android:id=&quot;@+id/easyButton&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:layout_marginEnd=&quot;8dp&quot;&#10;            android:background=&quot;@drawable/rounded_button_blue&quot;&#10;            android:text=&quot;@string/easy_button&quot;&#10;            android:textColor=&quot;#FFFFFF&quot;&#10;            android:textSize=&quot;14sp&quot;&#10;            android:gravity=&quot;center&quot;&#10;            android:paddingTop=&quot;16dp&quot;&#10;            android:paddingBottom=&quot;16dp&quot; /&gt;&#10;&#10;        &lt;!-- Botón Personalizado --&gt;&#10;        &lt;Button&#10;            android:id=&quot;@+id/customButton&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:background=&quot;@drawable/rounded_button_blue&quot;&#10;            android:text=&quot;@string/custom_button&quot;&#10;            android:textColor=&quot;#FFFFFF&quot;&#10;            android:textSize=&quot;14sp&quot;&#10;            android:gravity=&quot;center&quot;&#10;            android:paddingTop=&quot;16dp&quot;&#10;            android:paddingBottom=&quot;16dp&quot; /&gt;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;!-- Temporizador --&gt;&#10;    &lt;LinearLayout&#10;        android:id=&quot;@+id/timerLayout&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:gravity=&quot;center&quot;&#10;        android:padding=&quot;24dp&quot;&gt;&#10;&#10;        &lt;!-- Estado de la sesión --&gt;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/sessionStatus&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;@string/session_status&quot;&#10;            android:paddingStart=&quot;8dp&quot;&#10;            android:paddingEnd=&quot;8dp&quot;&#10;            android:paddingTop=&quot;4dp&quot;&#10;            android:paddingBottom=&quot;4dp&quot;&#10;            android:textColor=&quot;#FFFFFF&quot;&#10;            android:textSize=&quot;14sp&quot;&#10;            android:layout_marginBottom=&quot;24dp&quot; /&gt;&#10;&#10;        &lt;!-- Temporizador --&gt;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/pomodoroTime&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;25:00&quot;&#10;            android:textSize=&quot;72sp&quot;&#10;            android:textColor=&quot;#333333&quot;&#10;            android:layout_marginBottom=&quot;24dp&quot; /&gt;&#10;&#10;        &lt;!-- Controles del temporizador --&gt;&#10;        &lt;LinearLayout&#10;            android:id=&quot;@+id/timerControlsLayout&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:gravity=&quot;center&quot;&gt;&#10;&#10;            &lt;!-- Botón Iniciar --&gt;&#10;            &lt;Button&#10;                android:id=&quot;@+id/startButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:background=&quot;@drawable/rounded_button_pink&quot;&#10;                android:text=&quot;@string/start_button&quot;&#10;                android:textColor=&quot;#FFFFFF&quot;&#10;                android:paddingStart=&quot;24dp&quot;&#10;                android:paddingEnd=&quot;24dp&quot;&#10;                android:paddingTop=&quot;12dp&quot;&#10;                android:paddingBottom=&quot;12dp&quot;&#10;                android:drawablePadding=&quot;8dp&quot;&#10;                android:gravity=&quot;center&quot;&#10;                android:minWidth=&quot;120dp&quot; /&gt;&#10;            &#10;            &lt;!-- Botón Detener --&gt;&#10;            &lt;Button&#10;                android:id=&quot;@+id/stopButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_marginStart=&quot;16dp&quot;&#10;                android:text=&quot;@string/stop_button&quot;&#10;                android:textColor=&quot;#666666&quot;&#10;                android:background=&quot;@drawable/rounded_button_blue&quot;&#10;                android:paddingStart=&quot;24dp&quot;&#10;                android:paddingEnd=&quot;24dp&quot;&#10;                android:paddingTop=&quot;12dp&quot;&#10;                android:paddingBottom=&quot;12dp&quot;&#10;                android:drawablePadding=&quot;8dp&quot;&#10;                android:gravity=&quot;center&quot;&#10;                android:minWidth=&quot;120dp&quot; /&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;!-- NUEVO: Botones para seleccionar música debajo del temporizador --&gt;&#10;        &lt;LinearLayout&#10;            android:id=&quot;@+id/musicButtonsLayout&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&#10;            android:gravity=&quot;center&quot;&#10;            android:layout_marginTop=&quot;24dp&quot;&gt;&#10;&#10;            &lt;Button&#10;                android:id=&quot;@+id/musicAmbientButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Ambient&quot;&#10;                android:background=&quot;@drawable/rounded_button_blue&quot;&#10;                android:textColor=&quot;#FFFFFF&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot;&#10;                android:paddingLeft=&quot;16dp&quot;&#10;                android:paddingRight=&quot;16dp&quot;&#10;                android:paddingTop=&quot;8dp&quot;&#10;                android:paddingBottom=&quot;8dp&quot;/&gt;&#10;&#10;            &lt;Button&#10;                android:id=&quot;@+id/musicRelaxingButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Relaxing&quot;&#10;                android:background=&quot;@drawable/rounded_button_blue&quot;&#10;                android:textColor=&quot;#FFFFFF&quot;&#10;                android:layout_marginEnd=&quot;8dp&quot;&#10;                android:paddingLeft=&quot;16dp&quot;&#10;                android:paddingRight=&quot;16dp&quot;&#10;                android:paddingTop=&quot;8dp&quot;&#10;                android:paddingBottom=&quot;8dp&quot;/&gt;&#10;&#10;            &lt;Button&#10;                android:id=&quot;@+id/musicRainButton&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Rain&quot;&#10;                android:background=&quot;@drawable/rounded_button_blue&quot;&#10;                android:textColor=&quot;#FFFFFF&quot;&#10;                android:paddingLeft=&quot;16dp&quot;&#10;                android:paddingRight=&quot;16dp&quot;&#10;                android:paddingTop=&quot;8dp&quot;&#10;                android:paddingBottom=&quot;8dp&quot;/&gt;&#10;        &lt;/LinearLayout&gt;&#10;    &lt;/LinearLayout&gt;&#10;&lt;/LinearLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>